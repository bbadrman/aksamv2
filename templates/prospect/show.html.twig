{% extends 'base.html.twig' %}

{% block title %}Information du
	{{ prospect.nom }}
	{{ prospect.prenom }}- Aksam
{% endblock %}

{% block body %}
	<div class="row">
		{% for label,  messages in app.flashes  %}
			<div class="container">
				<div class="alert alert-{{ label }}">
					{% for message in messages %}
						{{ message | raw }}
					{% endfor %}

				</div>
			</div>
		{% endfor %}

		<section class="content-header">
			<h1>
				Prospect du
				<b>{{ prospect.nom }}
					{{ prospect.prenom }}
				</b>

			</h1>
			<ol class="breadcrumb">
				<li>
					<a href="#">
						<i class="fa fa-users"></i>
						Toutes les Tables</a>
				</li>
				<li>
					<a href="{{ path('app_prospect_index') }}">
						<i class="fa fa-diamond"></i>
						Toutes les prospects</a>
				</li>
				<li class="active">
					<i class="fa fa-user-circle"></i>
					{{ prospect.nom }}
					{{ prospect.prenom }}</li>
			</ol>
		</section>
		<div class="form-group col-sm-4">
			<div class="content-panel">
				<div class="alert alert-light">
					<h4 class="text-center">
						<strong>Informations</strong>
					</4>
				</div>
				<table class="table">

					<tbody>

						<tr>
							<th>Nom</th>
							<td>{{ prospect.nom }}</td>
						</tr>
						<tr>
							<th>Prenom</th>
							<td>{{ prospect.prenom }}</td>
						</tr>
						<tr>
							<th>Phone</th>
							<td>{{ prospect.phone }}</td>
						</tr>
						<tr>
							<th>Email</th>
							<td>{{ prospect.email }}</td>
						</tr>
						<tr>
							<th>Gender</th>
							<td>{{ prospect.gender }}</td>
						</tr>
						<tr>
							<th>City</th>
							<td>{{ prospect.city }}</td>
						</tr>
						<tr>
							<th>Adress</th>
							<td>{{ prospect.adress }}</td>
						</tr>
						<tr>
							<th>BrithAt</th>
							<td>{{ prospect.brithAt ? prospect.brithAt|date('Y-m-d H:i:s') : '' }}</td>
						</tr>
						<tr>
							<th>Source</th>
							<td>{{ prospect.source }}</td>
						</tr>
						<tr>
							<th>TypeProspect</th>
							<td>{{ prospect.typeProspect }}</td>
						</tr>
						<tr>
							<th>RaisonSociale</th>
							<td>{{ prospect.raisonSociale }}</td>
						</tr>
						<tr>
							<th>CodePost</th>
							<td>{{ prospect.codePost }}</td>
						</tr>
						<tr>
							<th>Gsm</th>
							<td>{{ prospect.gsm }}</td>
						</tr>
						<tr>
							<th>Assurer</th>
							<td>{{ prospect.assurer }}</td>
						</tr>
						<tr>
							<th>LastAssure</th>
							<td>{{ prospect.lastAssure }}</td>
						</tr>
						<tr>
							<th>MotifResil</th>
							<td>{{ prospect.motifResil }}</td>
						</tr>
						<tr>
							<th>MotifSaise</th>
							<td>{{ prospect.motifSaise }}</td>
						</tr>
						<tr>
							<th>Url</th>
							<td>{{ prospect.url }}</td>
						</tr>
						<tr>
							<th>SecdEmail</th>
							<td>{{ prospect.secdEmail }}</td>
						</tr>
						<tr>
							<th>CreatAt</th>
							<td>{{ prospect.creatAt ? prospect.creatAt|date('Y-m-d H:i:s') : '' }}</td>
						</tr>
						<tr>
							<th>Activites</th>
							<td>{{ prospect.activites }}</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
		<div class="form-group col-sm-4">
			<div class="content-panel">
				<div class="alert alert-light">
					<h4 class="text-center">
						<strong>Relances</strong>
					</4>

					<table class="table table-striped table-advance table-hover">
						<thead>

							<tr style="text-align: left; font-size:20px;">

								<th>Option</th>
								<th>Date</th>
								<th>Commentaire</th>

							</tr>

						</thead>
						<tbody>


							{% for relance in relanceHistory|sort((a, b) => b.relancedAt <=> a.relancedAt)  %}
								<tr>
									<td>

										{% if relance.motifRelance is null %}
											Pas encore relancer
										{% elseif  relance.motifRelance == 1 %}
											Rendez-vous
										{% elseif relance.motifRelance == 2 %}
											Injoignable
										{% elseif relance.motifRelance == 3 %}
											Attente DOC
										{% elseif relance.motifRelance == 4 %}
											Tarification
										{% elseif relance.motifRelance == 5 %}
											Prise de Décision
										{% elseif relance.motifRelance == 6 %}
											Faux Fiche
										{% elseif relance.motifRelance == 7 %}
											Doublon
										{% elseif relance.motifRelance == 8 %}
											Passage Concurrent
										{% elseif relance.motifRelance == 9 %}
											Passage Client
										{% elseif relance.motifRelance == 10 %}
											Déjà Souscrit
										{% elseif relance.motifRelance == 11 %}
											Toujour Injoignable
										{% elseif relance.motifRelance == 13 %}
											Test
										{% endif %}
									</td>


									<td>{{ relance.relancedAt ? relance.relancedAt|date('Y-m-d H:i') : '' }}</td>

									<td class="truncated" onclick="showFullText(this)">
										<span class="shortened">{{  relance.comment |slice(0, 50) }}</span>
										<span class="fullText" style="display: none;">{{ relance.comment }}</span>
									</td>
								</tr>
							{% endfor %}
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<div class="form-group col-sm-4">
			<div class="content-panel">
				<div class="alert alert-light">
					<h4 class="text-center">
						<strong>Historique</strong>
					</4>


					<table class="table table-striped table-advance table-hover">
						<thead>

							<tr style="text-align: left; font-size:20px;">

								<th>Option</th>
								<th>Date</th>
								<th>Comantaire</th>

							</tr>

						</thead>
						<tbody>
							{% for histor in teamHistory %}
								<tr>
									<td>
										Affecté au
										{{ histor.actionType }}</td>

									<td>{{ histor.actionDate|date('Y-m-d H:i:s') }}</td>

								</tr>
							{% endfor %}
						</tbody>
					</table>
					<!-- Button to trigger modal -->
					<button type="button" class="btn btn-info btn-sm" id="showCallsButton" data-id="{{ prospect.id }}">
						<img src="{{ asset('images/chat-en-direct.png') }}" class="img-circle" width="20" alt="Historique des appels">
						Appels
					</button>

					<!-- Modal -->
					<div class="modal fade" id="callsModal" tabindex="-1" aria-labelledby="callsModalLabel" aria-hidden="true">
						<div class="modal-dialog modal-lg">
							<div class="modal-content">
								<div class="modal-header">
									<h3 class="modal-title" id="callsModalLabel">Historique des appels</h3>
									<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
								</div>
								<div class="modal-body">
									<div id="callsContent">
										<div class="text-center">
											<i class="fas fa-phone"></i>
											Cliquez sur le bouton pour charger les appels...
										</div>
									</div>
								</div>
								<div class="modal-footer">
									<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
									<button type="button" class="btn btn-primary" id="refreshCallsButton">
										<i class="fas fa-sync-alt"></i>
										Actualiser
									</button>
								</div>
							</div>
						</div>
					</div>

				</div>
			</div>
		</div>
	</div>

	<a href="{{ path('app_prospect_index') }}">back to list</a>
	{% if is_granted('ROLE_TRAITEMENT') %}
		<a href="{{ path('app_prospect_edit', {'id': prospect.id}) }}">edit</a>
	{% endif %}

{% endblock %}
{% block javascripts %}
	<!-- Supprimer le script calls.js séparé et tout intégrer ici -->
	<script type="text/javascript">
		// Pour afficher comment onclick sur comment sur motifrelanced
function showFullText(element) { // Récupère l'élément contenant le texte complet
var fullText = element.querySelector('.fullText');
// Change la visibilité du texte complet au clic
if (fullText.style.display === 'none') {
fullText.style.display = 'inline'; // Montre le texte complet
element.querySelector('.shortened').style.display = 'none'; // Cache le texte raccourci
} else {
fullText.style.display = 'none'; // Cache le texte complet
element.querySelector('.shortened').style.display = 'inline'; // Montre le texte raccourci
}
}

// Script pour le modal des appels
document.addEventListener('DOMContentLoaded', function () {
const showCallsButton = document.getElementById('showCallsButton');
const refreshCallsButton = document.getElementById('refreshCallsButton');
const callsContent = document.getElementById('callsContent');
const callsModal = document.getElementById('callsModal');

console.log('Script initialisé');
console.log('showCallsButton:', showCallsButton);
console.log('callsModal:', callsModal);

function loadCalls(prospectId) {
console.log('Chargement des appels pour le prospect:', prospectId);

if (callsContent) {
callsContent.innerHTML = '<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Chargement des appels...</div>';
}

fetch (`/appels/${prospectId}`).then(response => {
console.log('Réponse reçue:', response.status);
if (!response.ok) {
throw new Error (`HTTP error! status: ${
response.status
}`);
}
return response.text();
}).then(data => {
console.log('Données reçues:', data.substring(0, 100) + '...');
if (callsContent) {
callsContent.innerHTML = data;
}
}).catch(error => {
console.error('Error fetching calls:', error);
if (callsContent) {
callsContent.innerHTML = `
                                <div class="alert alert-danger">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    Erreur lors du chargement des appels. Veuillez réessayer.
                                    <br><small>Détails: ${
error.message
}</small>
                                </div>
                            `;
}
});
}

// Initialiser le modal Bootstrap 5
let modalInstance;
if (callsModal) {
modalInstance = new bootstrap.Modal(callsModal);
console.log('Modal Bootstrap initialisé');
}

// Événement sur le bouton d'ouverture du modal
if (showCallsButton) {
showCallsButton.addEventListener('click', function (e) {
e.preventDefault();
console.log('Bouton cliqué');

const prospectId = this.dataset.id;
console.log('Prospect ID:', prospectId);

// Charger les appels
if (prospectId) {
loadCalls(prospectId);
}

// Ouvrir le modal manuellement
if (modalInstance) {
modalInstance.show();
}
});
} else {
console.error('Bouton showCallsButton non trouvé');
}

// Événement sur le bouton de rafraîchissement
if (refreshCallsButton) {
refreshCallsButton.addEventListener('click', function () {
const prospectId = showCallsButton ? showCallsButton.dataset.id : null;
console.log('Rafraîchissement pour prospect:', prospectId);

if (prospectId) {
loadCalls(prospectId);
}
});
}

// Événement lorsque le modal s'ouvre (alternative)
if (callsModal) {
callsModal.addEventListener('shown.bs.modal', function () {
console.log('Modal ouvert');
// Vous pouvez ajouter du code ici si nécessaire
});
}
});
	</script>
{% endblock %}
