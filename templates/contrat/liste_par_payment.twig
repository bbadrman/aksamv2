{% extends 'base.html.twig' %}

{% block title %}Statistiques des contrats du mois
{% endblock %}

{% block body %}
	{% for label,  messages in app.flashes  %}
		<div class="container">
			<div class="alert alert-{{ label }}">
				{% for message in messages %}
					{{ message | raw }}
				{% endfor %}

			</div>
		</div>
	{% endfor %}
	{% for message in app.flashes('warning') %}
		<div class="alert alert-warning">
			{{ message }}
		</div>
	{% endfor %}
	<div class="row mt">
		<div class="col-lg-12">
			<div class="content-panel">
				<section class="content-header">

					<h1 style="text-align: center;">
						Chiffres d'Affaires du Mois<br>

					</h1>

					<div style="text-align: right;">
						<button type="button" class="btn btn-info">
							<a href="{{path('baypaymentcalendrie')}}">CHERCHER PAR CALENDRIER</a>
						</button>
					</div>


					<ol class="breadcrumb">
						<li>
							<a href="{{ path('app_home') }}">
								<i class="fa fa-dashboard"></i>
								Tableau de bord</a>
						</li>
					</ol>
				</section>

				<hr>
				<table id="contrat-stats" class="table table-striped table-hover table-bordered">
					<thead>
						<tr>
							<th>Commercial</th>
							<th class="text-right">Nombre de contrats</th>
							<th class="text-right sortable" data-sort="frais" style="cursor:pointer;">
								frais déclarés
								<i class="fa-solid fa-sort"></i>
							</th>
							<th class="text-right sortable" data-sort="frais_caisses" style="cursor:pointer;">
								frais en caisses
								<i class="fa-solid fa-sort"></i>
							</th>
						</tr>
					</thead>
					<tbody>
						{% set grandTotalFrais = 0 %}
						{% set grandTotalCredit = 0 %}

						{% for item in dataParCommercial %}
							{% set totalFrais = 0 %}
							{% set totalCredit = 0 %}

							{% for trans in item.transactions %}
								{% set totalFrais = totalFrais + (trans.frais ?? 0) %}
								{% set totalCredit = totalCredit + (trans.credit ?? 0) %}
							{% endfor %}

							<tr class="commercial-summary" data-target="details-{{ loop.index }}" data-total-frais="{{ totalFrais }}" data-total-credit="{{ totalCredit }}">
								<td>
									<button class="btn btn-info">{{ item.user.username }}
										<i class="fas fa-angle-down mr-2"></i>
									</button>

								</td>
								<td>{{  totalFrais|length }}</td>
								<td class="text-right">
									<strong>
										{{ totalFrais|number_format(2, ',', ' ') }}</strong>
									€</td>
								<td class="text-right">
									<strong>
										{{ totalCredit|number_format(2, ',', ' ') }}</strong>
									€</td>
								{% set grandTotalFrais = grandTotalFrais + totalFrais %}
								{% set grandTotalCredit = grandTotalCredit + totalCredit %}
							</tr>

							{# Détails cachés par défaut #}
							{% for trans in item.transactions %}
								<tr class="details-row details-{{ loop.parent.loop.index }} d-none">
									<td></td>

									<td>
										Transaction :
										<strong>{{ trans.transaction }}</strong>
										—
										<strong>Frais :</strong>
										{{ trans.frais|number_format(2, ',', ' ') }}
										€
									</td>
									<td>
										{% if trans.credit %}
											{{ trans.credit|number_format(2, ',', ' ') }}
											€
										{% else %}
											<span class="text-danger">✘</span>
										{% endif %}
									</td>
								</tr>
								{# ✅ Ligne Total Général #}

							{% endfor %}
						{% endfor %}
						<tr class="table-dark font-weight-bold">
							<td>
								<strong>Total Général</strong>
							</td>
							<td></td>
							<td>
								<strong>{{ grandTotalFrais|number_format(2, ',', ' ') }}
									€</strong>
							</td>
							<td>
								<strong>{{ grandTotalCredit|number_format(2, ',', ' ') }}
									€</strong>
							</td>
						</tr>
					</tbody>

				</table>


			</div>
		</div>
	</div>
{% endblock %}
{% block javascripts %}
	{{ parent() }}
	<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
let sortAscFrais = true;
let sortAscCaisses = true;

// Affichage / masquage des détails au clic
document.querySelectorAll('.commercial-summary').forEach(row => {
row.addEventListener('click', () => {
const index = row.dataset.index;
document.querySelectorAll (`.detail-row.detail-${index}`).forEach(detailRow => {
detailRow.style.display = (detailRow.style.display === 'none') ? 'table-row' : 'none';
});
});
});

// Fonction de tri sur les totaux
function sortTable(sortKey, ascending) {
const tbody = document.querySelector('#contrat-stats tbody');
const allRows = Array.from(tbody.querySelectorAll('tr'));

const blocks = [];

for (let i = 0; i < allRows.length; i++) {
const row = allRows[i];
if (row.classList.contains('commercial-summary')) {
const summary = row;
const details = [];

let j = i + 1;
while (j < allRows.length && allRows[j].classList.contains('detail-row')) {
details.push(allRows[j]);
j++;
}

const totalValue = parseFloat(summary.querySelector (`td:nth-child(${
sortKey === 'frais' ? 2 : 3
})`).textContent.replace(/\s/g, '').replace(',', '.'));
blocks.push({summary, details, totalValue});

i = j - 1;
}
}

blocks.sort((a, b) => ascending ? a.totalValue - b.totalValue : b.totalValue - a.totalValue);

tbody.innerHTML = '';
blocks.forEach(block => {
tbody.appendChild(block.summary);
block.details.forEach(detail => tbody.appendChild(detail));
});
}

document.querySelector('.sortable[data-sort="frais"]').addEventListener('click', function () {
sortTable('frais', sortAscFrais);
sortAscFrais = ! sortAscFrais;
});

document.querySelector('.sortable[data-sort="frais_caisses"]').addEventListener('click', function () {
sortTable('caisses', sortAscCaisses);
sortAscCaisses = ! sortAscCaisses;
});
});

// Affichage / masquage des détails au clic

document.addEventListener('DOMContentLoaded', function () {
let sortAscFrais = true;
let sortAscCredit = true;

// Toggle les lignes de détails
document.querySelectorAll('.commercial-summary').forEach(row => {
row.addEventListener('click', () => {
const target = row.dataset.target;
document.querySelectorAll (`.details-row.${target}`).forEach(tr => {
tr.classList.toggle('d-none');
});
});
});

function sortTableBy(column, ascending) {
const tbody = document.querySelector('#contrat-stats tbody');
const rows = Array.from(tbody.querySelectorAll('.commercial-summary'));

const sortedRows = rows.sort((a, b) => {
const valA = parseFloat(a.dataset[column]);
const valB = parseFloat(b.dataset[column]);
return ascending ? valA - valB : valB - valA;
});

// Réorganiser les lignes avec les détails
tbody.innerHTML = '';
sortedRows.forEach(row => {
tbody.appendChild(row);
const target = row.dataset.target;
document.querySelectorAll (`.details-row.${target}`).forEach(tr => {
tbody.appendChild(tr);
});
});
}

document.querySelector('.sortable[data-sort="frais"]').addEventListener('click', () => {
sortTableBy('totalFrais', sortAscFrais);
sortAscFrais = ! sortAscFrais;
});

document.querySelector('.sortable[data-sort="frais_caisses"]').addEventListener('click', () => {
sortTableBy('totalCredit', sortAscCredit);
sortAscCredit = ! sortAscCredit;
});
});
	</script>


{% endblock %}
