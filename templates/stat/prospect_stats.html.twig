{% extends 'base.html.twig' %}

{% block title %}Statistiques Prospects
{% endblock %}

{% block body %}
	<div class="container-fluid">
		<div class="row">
			<div class="col-12">
				<h1 class="h3 mb-4">
					<i class="fas fa-chart-bar"></i>
					Statistiques des Prospects
				</h1>

				{# Formulaire de recherche #}
				<div class="card mb-4">
					<div class="card-header">
						<h5 class="mb-0">
							<i class="fas fa-search"></i>
							Filtres de recherche
						</h5>
					</div>
					<div class="card-body">
						{{ form_start(search_form, {'method': 'GET'}) }}
						<div class="row">
							<div class="col-md-4">
								{{ form_row(search_form.startDate, {
                                'label': 'Date de début',
                                'attr': {'class': 'form-control'}
                            }) }}
							</div>
							<div class="col-md-4">
								{{ form_row(search_form.endDate, {
                                'label': 'Date de fin',
                                'attr': {'class': 'form-control'}
                            }) }}
							</div>
							<div class="col-md-4 d-flex align-items-end">
								<button type="submit" class="btn btn-primary me-2">
									<i class="fas fa-search"></i>
									Rechercher
								</button>
								<a href="{{ path('app_prospect_stats') }}" class="btn btn-secondary">
									<i class="fas fa-eraser"></i>
									Réinitialiser
								</a>
							</div>
						</div>
						{{ form_end(search_form) }}

						{# Filtres supplémentaires #}
						<hr>
						<div class="row">
							<div class="col-md-6">
								<label class="form-label">Filtrer par équipe :</label>
								<select class="form-select" id="teamFilter" onchange="filterByTeam()">
									<option value="">Toutes les équipes</option>
									{% for team in teams %}
										<option value="{{ team.id }}" {{ selectedTeam == team.id ? 'selected' : '' }}>
											{{ team.name }}
										</option>
									{% endfor %}
								</select>
							</div>
							<div class="col-md-6">
								<label class="form-label">Filtrer par commercial :</label>
								<select class="form-select" id="commercialFilter" onchange="filterByCommercial()">
									<option value="">Tous les commerciaux</option>
									{% for commercial in commercials %}
										<option value="{{ commercial.id }}" {{ selectedCommercial == commercial.id ? 'selected' : '' }}>
											{{ commercial.firstname }}
											{{ commercial.lastname }}
										</option>
									{% endfor %}
								</select>
							</div>
						</div>
					</div>
				</div>

				{# Résumé des résultats #}
				{% if searchExecuted or selectedTeam or selectedCommercial %}
					<div class="alert alert-info">
						<i class="fas fa-info-circle"></i>
						<strong>Période sélectionnée :</strong>
						{% if finalStartDate and finalEndDate %}
							Du
							{{ finalStartDate|date('d/m/Y') }}
							au
							{{ finalEndDate|date('d/m/Y') }}
						{% else %}
							Toutes les dates
						{% endif %}
						<br>
						<strong>Total des prospects :</strong>
						{{ totalProspects }}
					</div>
				{% endif %}

				{# Tableau des statistiques #}
				{% if statsData is not empty %}
					<div class="card">
						<div class="card-header">
							<h5 class="mb-0">
								<i class="fas fa-table"></i>
								Statistiques détaillées
								{% if filterType == 'team' %}
									par équipe
								{% else %}
									par commercial
								{% endif %}
							</h5>
						</div>
						<div class="card-body">
							<div class="table-responsive">
								<table class="table table-striped table-hover">
									<thead class="table-dark">
										<tr>
											<th>
												{% if filterType == 'team' %}
													Équipe
												{% else %}
													Commercial
												{% endif %}
											</th>
											<th class="text-center">Total Prospects</th>
											<th class="text-center">Détails par Source</th>
											<th class="text-center">Détails par Type</th>
											<th class="text-center">Détails par Activité</th>
											<th class="text-center">Actions</th>
										</tr>
									</thead>
									<tbody>
										{% for data in statsData %}
											<tr>
												<td>
													{% if filterType == 'team' %}
														<strong>{{ data.entity.name }}</strong>
													{% else %}
														<strong>{{ data.entity.firstname }}
															{{ data.entity.lastname }}</strong>
													{% endif %}
												</td>
												<td class="text-center">
													<span class="badge bg-primary fs-6">{{ data.totalProspects }}</span>
												</td>
												<td>
													{% for source, count in data.sourceStats %}
														<small class="d-block">{{ source }}:
															{{ count }}</small>
													{% endfor %}
												</td>
												<td>
													{% for type, count in data.typeStats %}
														<small class="d-block">{{ type }}:
															{{ count }}</small>
													{% endfor %}
												</td>
												<td>
													{% for activite, count in data.activiteStats %}
														<small class="d-block">{{ activite }}:
															{{ count }}</small>
													{% endfor %}
												</td>
												<td class="text-center">
													{% if filterType == 'team' %}
														<a href="{{ path('app_prospect_stats_team_detail', { 'id': data.entity.id, 'startDate': finalStartDate ? finalStartDate|date('Y-m-d') : '', 'endDate': finalEndDate ? finalEndDate|date('Y-m-d') : '' }) }}" class="btn btn-sm btn-outline-primary">
															<i class="fas fa-eye"></i>
															Détails
														</a>
													{% else %}
														<a href="{{ path('app_prospect_stats_commercial_detail', { 'id': data.entity.id, 'startDate': finalStartDate ? finalStartDate|date('Y-m-d') : '', 'endDate': finalEndDate ? finalEndDate|date('Y-m-d') : '' }) }}" class="btn btn-sm btn-outline-primary">
															<i class="fas fa-eye"></i>
															Détails
														</a>
													{% endif %}
												</td>
											</tr>
										{% endfor %}
									</tbody>
								</table>
							</div>
						</div>
					</div>

					{# Graphiques de synthèse #}
					{% if statsData|length > 0 %}
						<div class="row mt-4">
							<div class="col-md-6">
								<div class="card">
									<div class="card-header">
										<h6>Répartition par Source</h6>
									</div>
									<div class="card-body">
										<canvas id="sourceChart"></canvas>
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="card">
									<div class="card-header">
										<h6>Répartition par Type</h6>
									</div>
									<div class="card-body">
										<canvas id="typeChart"></canvas>
									</div>
								</div>
							</div>
						</div>
					{% endif %}
				{% elseif searchExecuted %}
					<div class="alert alert-warning">
						<i class="fas fa-exclamation-triangle"></i>
						Aucun prospect trouvé pour les critères sélectionnés.
					</div>
				{% endif %}
			</div>
		</div>
	</div>

	<script>
		function filterByTeam() {
const teamId = document.getElementById('teamFilter').value;
const url = new URL(window.location);

if (teamId) {
url.searchParams.set('team', teamId);
url.searchParams.set('filter', 'team');
url.searchParams.delete('commercial');
} else {
url.searchParams.delete('team');
url.searchParams.delete('filter');
}

window.location.href = url.toString();
}

function filterByCommercial() {
const commercialId = document.getElementById('commercialFilter').value;
const url = new URL(window.location);

if (commercialId) {
url.searchParams.set('comrcl', commercialId);
url.searchParams.set('filter', 'comrcl');
url.searchParams.delete('team');
} else {
url.searchParams.delete('comrcl');
url.searchParams.delete('filter');
}

window.location.href = url.toString();
}

// Graphiques Chart.js
{% if statsData is not empty %}
document.addEventListener('DOMContentLoaded', function () { // Agrégation des données pour les graphiques
const sourceData = {};
const typeData = {};{% for data in statsData %}{% for source, count in data.sourceStats %}if (! sourceData['{{ source }}']) 
sourceData['{{ source }}'] = 0;



sourceData['{{ source }}'] += {{ count }};{% endfor %}{% for type, count in data.typeStats %}if (! typeData['{{ type }}']) 
typeData['{{ type }}'] = 0;



typeData['{{ type }}'] += {{ count }};{% endfor %}{% endfor %}

// Graphique des sources
const sourceCtx = document.getElementById('sourceChart').getContext('2d');
new Chart(sourceCtx, {
type: 'pie',
data: {
labels: Object.keys(sourceData),
datasets: [
{
data: Object.values(sourceData),
backgroundColor: [
'#FF6384',
'#36A2EB',
'#FFCE56',
'#4BC0C0',
'#9966FF',
'#FF9F40',
'#FF6384',
'#C9CBCF'
]
}
]
},
options: {
responsive: true,
plugins: {
legend: {
position: 'bottom'
}
}
}
});

// Graphique des types
const typeCtx = document.getElementById('typeChart').getContext('2d');
new Chart(typeCtx, {
type: 'doughnut',
data: {
labels: Object.keys(typeData),
datasets: [
{
data: Object.values(typeData),
backgroundColor: ['#36A2EB', '#FF6384']
}
]
},
options: {
responsive: true,
plugins: {
legend: {
position: 'bottom'
}
}
}
});
});{% endif %}
	</script>
{% endblock %}
